# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes



# Conexion a la base de datos
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

#db.default.driver=org.h2.Driver
#db.default.url="jdbc:h2:file:~/data/db"
#db.default.jndiName=DefaultDS

#modo en memoria
db.default.url="jdbc:h2:mem:play"
db.default.username=sa
db.default.password=""


jpa.default=defaultPersistenceUnit


ebean.default = ["models.*"]
# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false
# play.evolutions.db.default.autoApply=true
# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false
applyEvolutions.default=true

//Overriding default-dispatcher
play {
  akka {
    actor {
      default-dispatcher = {
        fork-join-executor {
          parallelism-factor = 100//ceil(available processors * factor)
          parallelism-max = 2500 //upper cap
        }
      }
    }
  }
  //A custom thread-pool
  play {
    blocking-pool = {
      fork-join-executor {
        parallelism-min = 500 //lower cap starting with parallelism-factor of 1
        parallelism-max = 2000//upper cap starting with parallelism-factor of 1
      }
    }
  }
}
